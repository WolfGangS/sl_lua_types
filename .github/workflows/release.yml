name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
      - uses: actions/setup-node@v4
        with:
          node-version: "22.x"
      - name: Node CI
        run: npm ci
      - name: Download
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        env:
          BOT_FIRST_NAME: ${{ secrets.BOT_FIRST_NAME }}
          BOT_LAST_NAME: ${{ secrets.BOT_LAST_NAME }}
          BOT_PASSWORD: ${{ secrets.BOT_PASSWORD }}
          BOT_LOCATION: ${{ secrets.BOT_LOCATION }}
        run: npx tsc download/keywords.ts && node download/keywords.js "$BOT_FIRST_NAME" "$BOT_LAST_NAME" "$BOT_PASSWORD" "$BOT_LOCATION"
      - name: Copy Download
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: rm data/keywords_lsl_formatted.llsd.xml && cp data/keywords_lsl_download.llsd.xml data/keywords_lsl_formatted.llsd.xml
      - name: Build
        run: deno task build
      - name: Document
        run: deno task markdown
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Upload docs as artifacts
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/html/
      - uses: actions/upload-artifact@v4
        with:
          name: keywords
          path: data/keywords_lsl_formatted.llsd.xml
      - name: Hash
        run: sha1sum dist/* | sha1sum | cut -d " " -f 1
      - name: Converts Markdown to HTML
        uses: jaywcjlove/markdown-to-html-cli@main
        with:
          source: README.md
          output: dist/index.html
          github-corners: https://github.com/WolfGangS/sl_lua_types
      - uses: montudor/action-zip@v1
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        with:
          args: zip -qq -r sl_lua_types.zip dist
      - name: Create Release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          artifacts: sl_lua_types.zip, dist/*.json, dist/*.toml, dist/*.luau, dist/*.yml, dist/*.code-snippets

  deploy-pages:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4