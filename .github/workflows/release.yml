name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - gha/*
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
      - uses: actions/setup-node@v4
        if: github.event_name != 'push'
        with:
          node-version: "22.x"
      - name: Node CI
        if: github.event_name != 'push'
        run: npm ci
      - name: Download
        if: github.event_name != 'push'
        env:
          BOT_FIRST_NAME: ${{ secrets.BOT_FIRST_NAME }}
          BOT_LAST_NAME: ${{ secrets.BOT_LAST_NAME }}
          BOT_PASSWORD: ${{ secrets.BOT_PASSWORD }}
          BOT_LOCATION: ${{ secrets.BOT_LOCATION }}
        run: npx tsc download/keywords.ts && node download/keywords.js "$BOT_FIRST_NAME" "$BOT_LAST_NAME" "$BOT_PASSWORD" "$BOT_LOCATION"
      - name: Not Download
        if: github.event_name == 'push'
        run: cp data/keywords_lsl_formatted.llsd.xml data/keywords_lsl_download.llsd.xml
      - name: Build
        run: deno task build-dl
      - uses: actions/upload-artifact@v4
        with:
          name: outputs
          path: out/
      - uses: actions/upload-artifact@v4
        with:
          name: keywords
          path: data/keywords_lsl_download.llsd.xml
      - name: Hash
        run: sha1sum out/* | sha1sum | cut -d " " -f 1
      - uses: montudor/action-zip@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          args: zip -qq -r sl_lua_types.zip out
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          artifacts: sl_lua_types.zip
